{
  "name": "mcp-server",
  "version": "1.0.0",
  "description": "Model Context Protocol Server - HTTP server for managing and executing MCP services",
  "main": "dist/index.js",
  "scripts": {
    "build": "tsc",
    "start": "node dist/index.js",
    "dev": "nodemon --exec ts-node src/index.ts",
    "test": "echo \"Error: no test specified\" && exit 1",
    "clean": "rm -rf dist",
    "lint": "echo \"Linting not configured yet\"",
    "electron": "electron .",
    "electron-dev": "concurrently \"npm run dev\" \"wait-on http://localhost:3001 && electron .\"",
    "electron-build": "npm run build && electron-builder",
    "dist": "npm run build && electron-builder --publish=never"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "server",
    "api",
    "websocket",
    "express"
  ],
  "author": "MCP Client Team",
  "license": "MIT",
  "engines": {
    "node": ">=16.0.0"
  },
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^17.2.2",
    "express": "^5.1.0",
    "helmet": "^8.1.0",
    "morgan": "^1.10.1",
    "sqlite": "^5.1.1",
    "sqlite3": "^5.1.7",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/morgan": "^1.9.10",
    "@types/node": "^22.10.2",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.5.13",
    "concurrently": "^8.2.2",
    "electron": "^28.0.0",
    "electron-builder": "^24.9.1",
    "nodemon": "^3.1.9",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.2",
    "wait-on": "^7.2.0"
  },
  "main": "dist/electron/main.js",
  "homepage": "./",
  "build": {
    "appId": "com.mcpclient.server",
    "productName": "MCP Server",
    "directories": {
      "output": "dist-electron"
    },
    "files": [
      "dist/**/*",
      "node_modules/**/*",
      "package.json"
    ],
    "mac": {
      "category": "public.app-category.developer-tools",
      "target": "dmg"
    },
    "win": {
      "target": "nsis"
    },
    "linux": {
      "target": "AppImage"
    }
  }
}
